{
  "hash": "d603818b0b9aa6bfbc9fd871ca9f1f8b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"水産海洋データ解析演習の R コードについて\"\n---\n\n\n::: {.cell}\n\n:::\n\n\nこのサイトは [水産海洋データ解析演習](http://www-mri.fish.nagasaki-u.ac.jp/ja/kyoten/) のために準備しました。\n\nサイトの更新日は 09/21/2025 14:25:18 JST です。\n\n- コードは考えずにコピペしないでください。\n- コードに使用したデータは研究室のサーバにあるので公開していません。\n\n\n[`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1.5em;width:1.7em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html}](https://cran.r-project.org/) はここ <https://cran.r-project.org/> からダウンロードできます。\nWindows ユーザは [Rtools](https://cran.r-project.org/bin/windows/Rtools/) もインストールすることをお勧めします。\n\n[RStudio](https://posit.co/download/rstudio-desktop/) もインストールしましょう。\nR のデフォルトの IDE はとても使いにくいです。\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=90%}\n:::\n:::\n\n\n**Session Information**\n\n* Platform: x86_64-pc-linux-gnu\n* R version: Great Square Root (R version 4.5.1 (2025-06-13))\n\n## Quick Reference\n\n**ヘルプ**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?mean                          # mean() 関数のヘルプをみる\nhelp.search(\"mean\")            # 文字列で検索\nhelp(package = \"tidyverse\")    # パッケージのヘルプをみる\n```\n:::\n\n\n**ライブラリー (library)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")   # CRANサーバからパッケージをインストールする\n```\n:::\n\n\n一回インストールすればいいので、`install.packages()` は毎回する必要はない。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)              # パッケージをライブラリーから読み込む\nnlstools::preview()             # パッケージ内の関数を直接使う\n```\n:::\n\n\n\n**プログラミング文の基礎**\n\n**for loop**\n\n```\nfor (変数名 in シークエンス) {\n  繰り返し実行するコード\n}\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:10) {\n  j = j + i\n  print(j)\n}\n```\n:::\n\n\n**while loop**\n\n```\nwhile(条件) {\n  繰り返し実行するコード\n}\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni = 0\nwhile(i <= 10) {\n  i = i + 1\n  print(i)\n}\n```\n:::\n\n\n**if else**\n\n```\nif(条件) {\n  コード\n} else {\n　条件を満たさないときのコード\n}\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx1 = sample(1:6, 1) \nx2 = sample(1:6, 1)\nif(near(x1 + x2, 7)) {\n  print(paste(x1, x2))\n} else {\n  print(x1 + x2)}\n```\n:::\n\n\n**条件判定**\n\n* `x == y` : x と y は等しい\n* `x != y` : x と y は等しくない\n* `x > y` : x が y より大きい\n* `x < y` : x が y より小さい\n* `x >= y` : x が y 以上\n* `x <= y` : x が y 以下\n* `is.na(x)` : x が欠損値である\n* `is.null(x)` : x が null 値である\n* `any(x %in% y)` : x が y に含まれる\n\n**function**\n\n```\n関数名 = function(変数1, 変数2, ...) {\n  コード\n}\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nse = function(x, na.rm = FALSE) {\n  s = sd(x, na.rm = na.rm)\n  n = length(na.omit(x))\n  s / sqrt(n - 1)\n}\n```\n:::\n\n\n**ファイルの入出力**\n\n研究室では、ファイルの入出力に `tidyverse`　パッケージの関数を使っています。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyerse)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ファイルの読み込み\ndset = read_table(\"filename.txt\") # タブ・コンマ区切りのテキストファイル\ndset = read_csv(\"filename.csv\")   # コンマ区切りの csv ファイル\ndset = read_rds(\"filename.rds\")   # R オブジェクトファイル\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ファイルの書き込み。文字のエンコーディングは UTF-8 です。\nwrite_tsv(dset, \"filename.txt\")         # タブ区切りの txt ファイル\nwrite_csv(dset, \"filename.csv\")         # コンマ区切りの csv ファイル\nwrite_excel_csv(dset, \"filename.csv\")   # Excel用 コンマ区切りの csv ファイル\nwrite_rds(dset, \"filename.rds\")         # R オブジェクトファイル\n```\n:::\n\n\n\n\n\n\n\n\n\n\n資料は自由に使ってください (MIT License)。\nサイトは [Quarto]() で作成しました。\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}