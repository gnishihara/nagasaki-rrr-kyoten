---
title: "tidyverseについて"
---

```{r}
#| include: false
library(tidyverse)
```

これまでは、Rに元々備わっている基本的な機能（Base Rと呼ばれます）を学んできました。
しかし、実際のデータ分析では、より効率的で直感的なツールが求められます。

そこで登場するのが `tidyverse` です。
`tidyverse` は単一のパッケージではなく、データサイエンスのために設計されたRパッケージの集合体です。
データ分析の一連の作業（読み込み、整形、可視化など）を、一貫した哲学のもとでスムーズに行えるように作られています。

`tidyverse` は、データ分析のための洗練された「道具箱」や「作業場」だと考えてください。
個々のツールが強力なだけでなく、互いに連携しやすいように設計されています。

## `tidyverse` の哲学：「タイディデータ」

`tidyverse` の中心には、タイディデータ (Tidy Data) という考え方があります。
これは、データを整理するためのシンプルなルールです。

- 各変数は、それ自身の列を持つ。
- 各観測は、それ自身の行を持つ。
- 各タイプの観測ユニットは、それ自身のテーブルを持つ。

この一貫したデータ形式に整えることで、`tidyverse` の各ツールをスムーズに連携させることができるのです。

## `tidyverse` の主要なパッケージたち

`tidyverse` をインストールすると、データ分析で頻繁に使われる多くの便利パッケージが一度に利用可能になります。
ここでは特に重要なものをいくつか紹介します。

- `dplyr` : データ操作の「動詞」集です。`filter()`（行の絞り込み）、`select()`（列の選択）、`mutate()`（新しい列の作成）、`arrange()`（並べ替え）、`summarise()`（要約）といった直感的な関数で、データを自在に操れます。
- `ggplot2`: Rで最も有名で強力なデータ可視化パッケージです。「グラフィックスの文法」という考え方に基づいており、単純なグラフから非常に複雑で美しいグラフまで、柔軟に作成できます。
- `readr`: CSVファイルなどの表形式データを高速かつ正確に読み込むためのパッケージです。Base Rの関数よりも使いやすく、安定しています。
- `tidyr`: データを「タイディな」形式に整形するためのパッケージです。列と行の形式を変換する `pivot_longer()` や `pivot_wider()` などの関数を提供します。
- `stringr`: 文字列（テキストデータ）の操作を簡単にするためのパッケージです。

## 魔法のパイプ演算子 `%>%` または `|>`

`tidyverse` のコードを特徴づけるのが、パイプ演算子 `%>%` です。
これは、左側の処理結果を、右側の関数の最初の引数として渡す役割をします。

R のネイティブのパイプは `|>` ですが、どちらでも似たような使い方です。

これにより、複数の処理を上から下、左から右へと、まるで文章を読むように繋げて書くことができます。

`%>%` はショートカットキー {{< kbd ctrl-shift-m >}} (Windows/Linux) または 
{{< kbd cmd-shift-m >}} (Mac) で簡単に入力できます。



**パイプを使わない場合**

```{r}
# diamondsデータセットから、カットが "Premium" のものを抜き出し、
# その価格の平均を計算する
summarise(filter(diamonds, cut == "Premium"), mean_price = mean(price))
```
このように、関数の内側に入れ子構造で書いていくため、処理が複雑になると読みにくくなります。

**パイプ `%>%` を使った場合**

```{r}
# 上と全く同じ処理
diamonds %>%
  filter(cut == "Premium") %>%
  summarise(mean_price = mean(price))
```

`diamonds` データセットを、次に `filter` し、次に `summarise` する、という処理の流れが非常に分かりやすくなります。


## `tidyverse` のインストールと使い方

tidyverse を使うには、まず一度だけインストール作業が必要です。

```{r}
#| eval: false
# 一度だけ実行すればOK
install.packages("tidyverse")
```

インストールが終わったら、Rのセッションを開始するたびに、`library()` 関数を使って `tidyverse` の道具箱を使えるように準備します。


```{r}
#| eval: false
# Rスクリプトの冒頭で毎回実行する
library(tidyverse)
```

## 演習

1. まだインストールしていない場合は、`tidyverse` をインストールしてください。
2. `library(tidyverse)` を実行して、パッケージを読み込んでください。
3. Rに組み込まれている `iris` というデータセットがあります。パイプ演算子 `%>%` を使って、以下の処理を一行で繋げて書いてみましょう。
  - `iris` データセットを使い、
  - `Species` が "setosa" の行だけを `filter()` で絞り込み、
  - その `Sepal.Length`（がくの長さ）の平均値を `summarise()` で計算する。

（ヒント：`summarise(mean_sepal_length = mean(Sepal.Length))` のように書きます）

